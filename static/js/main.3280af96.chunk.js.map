{"version":3,"sources":["components/AddCategory.js","helpers/GetCat.js","components/CateGorias.js","helpers/GetGift.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGits.js","components/Homegif.js","components/ShowCat.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getcat","a","fetch","resp","json","data","categoria","map","valores","name","sub","subcategories","img","gif","images","original","url","CateGorias","catser","setCatser","history","useHistory","useEffect","then","onClick","push","innerText","getGifs","category","encodeURI","gifs","id","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","imgs","setTimeout","useFetchGits","Homegif","setCategoria","buscar","ShowCat","props","this","match","params","Component","GifExpertApp","withRouter","path","component","to","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3280af96.chunk.js","sourcesContent":["import {useState} from \"react\";\nimport Proptypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length >2) {\n            setCategories(cat => [inputValue, ...cat]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: Proptypes.func.isRequired\n}\n\n"," export const getcat = async () => {\n    const url = `https://api.giphy.com/v1/gifs/categories?api_key=N5YKcNq9fcB7ijXCdZKd2dLz40lx578l`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const categoria = data.map((valores) => {\n        return {\n            name: valores.name,\n            sub: valores.subcategories,\n            img: valores.gif?.images.original.url\n            }\n    })\n     return categoria;\n}\n","import {getcat} from \"../helpers/GetCat\";\nimport {useEffect, useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const CateGorias = () => {\n    const [catser, setCatser] = useState([])\n    const history = useHistory();\n\n    useEffect( () => {\n        getcat().then(cat => {\n            setCatser(cat);\n        })\n    },[]);\n\n    return (\n        <>\n            <h2>Categorias</h2>\n            <>\n                {\n                    catser.map(({name}) => (\n                        <button onClick={(e) => history.push(\"/categories/\"+ e.target.innerText)} key={name}>{name}</button>\n                    ))\n                }\n            </>\n        </>\n    )\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=25&api_key=N5YKcNq9fcB7ijXCdZKd2dLz40lx578l`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n\n}\n","import React  from \"react\";\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    return (\n        <div className=\"img-gif\">\n            <img src={url} alt={title}/>\n                <p>{title}</p>\n        </div>\n    )\n}\n","import React from \"react\";\nimport {useFetchGits} from \"../hooks/useFetchGits\";\nimport {GifGridItem} from \"./GifGridItem\";\n\nexport const GifGrid = ({category}) => {\n\n    const {data, loading} = useFetchGits(category)\n\n\n    return (\n        <>\n            <h3 id={category}>{category}</h3>\n            {loading && <p>Loading</p>}\n            <div className=\"card-grid\">\n                <>\n                    {\n                    data.map( (img) =>\n                        (\n                            <GifGridItem\n                                key= {img.id}\n                                {...img} />\n                        )\n                    )\n                }\n                </>\n            </div>\n        </>\n    )\n}\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../helpers/GetGift\";\n\nexport const useFetchGits = ( category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setTimeout(() => {\n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n                }, 3000);\n            })\n    }, [category])\n\n    return state;\n}\n","import React, {useState} from \"react\";\nimport {AddCategory} from \"./AddCategory\";\nimport {CateGorias} from \"./CateGorias\";\nimport {GifGrid} from \"./GifGrid\";\n\n\nconst Homegif = () => {\n    const [categoria, setCategoria] = useState(['simpson']);\n\n    const buscar = (e) => {\n        //console.log(e.target.innerText);\n    }\n\n    return (\n        <>\n            <h1>Gif cards</h1>\n            <AddCategory setCategories={setCategoria}/>\n            <div className=\"formato\">\n                {categoria.map(cat => (\n                    <p key={cat} onClick={buscar} className=\"espacio\">{cat}</p>\n                ))}\n            </div>\n            <br/>\n            <CateGorias/>\n            <div className=\"card-grid\">\n                <ol>\n                    {\n                        categoria.map(cat => (\n                            <GifGrid key={cat} category={cat}/>\n                        ))\n                    }\n                </ol>\n            </div>\n\n        </>\n    )\n}\n\nexport default Homegif;\n","import {Component} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport {GifGrid} from \"./GifGrid\";\n\nexport class ShowCat extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cat: {}\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({cat: this.props.match.params })\n    }\n\n    render() {\n        const {cat} = this.props.match.params;\n        return (\n            <>\n                <h1>{cat}</h1>\n                <div className=\"card-grid\">\n                    <>\n                        {\n                            <GifGrid key={cat} category={cat}/>\n                        }\n                    </>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default withRouter(ShowCat)\n","import React from \"react\";\nimport {Switch, Redirect, Route} from 'react-router-dom';\nimport Homegif from \"./components/Homegif\";\nimport {ShowCat} from \"./components/ShowCat\";\n\nclass GifExpertApp extends React.Component {\n    render() {\n        return (\n            <Switch>\n                <Route path=\"/home\" component={Homegif} />\n                <Route path=\"/categories/:cat\" component={ShowCat} />\n                <Redirect to=\"/home\" />\n            </Switch>\n        )\n    }\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <GifExpertApp />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}